plugins {
    id "org.asciidoctor.convert" version "1.5.2"
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn test
}

jar {
    baseName = "glossary"
    version = null
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile('org.projectlombok:lombok')
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compile hateoas
    compile jsonwebtoken
    compile("org.springframework.boot:spring-boot-configuration-processor")
    compileJava.dependsOn(processResources)

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'org.springframework.security', name: 'spring-security-test'
    testCompile group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc'

    compile project(":persistence")
    compile project(":service")
}

group = 'solomkinmv'

apply plugin: "docker"

bootJar {
    mainClass = 'io.github.solomkinmv.glossary.web.Application'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
        copy {
            from file('src/main/docker/wrapper.sh')
            into stageDir
        }
        println  stageDir.listFiles()
    }
}