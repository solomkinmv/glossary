plugins {
    id 'org.asciidoctor.convert' version '1.5.6'
}

group = 'io.github.solomkinmv.glossary'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 9

apply plugin: 'com.palantir.docker'

dependencies {
    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-cache'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.mariadb.jdbc:mariadb-java-client'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile lombok
    compile project(':tts-service-client')

    compile jaxbApi // should be included as external dependency because of java 9
    compile jaxbCore// should be included as external dependency because of java 9
    compile jaxbImpl// should be included as external dependency because of java 9
    compile activation// should be included as external dependency because of java 9

    // security
    compile 'org.springframework.cloud:spring-cloud-starter-security'
    compile 'org.springframework.security:spring-security-test'
    compile 'org.springframework.cloud:spring-cloud-starter-oauth2'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testCompile playtikaTestcontainers
}

docker {
    name "solomkinmv/${bootJar.baseName}"
    tags project.version
    println "==> Docker task for ${name}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}